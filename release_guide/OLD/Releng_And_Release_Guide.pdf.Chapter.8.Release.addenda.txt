This is to record addenda for Releng_And_Release_Guide.pdf.

= Chapter 8. Release =

* Before a release, feature versions should be incremented in the builders/product/versionTags/*.tags files.

Here's how to get a list of the changes in SVN:

	svn diff --summarize https://svn.jboss.org/repos/jbosstools/tags/jbosstools-3.0.1.GA/ https://svn.jboss.org/repos/jbosstools/branches/jbosstools-3.0.x/ > 30 
1to302.log 
	cat 301to302.log | cut -c6- | cut -c68- | cut -d/ -f1-2 | uniq | grep "/plugins" | sort
	
		archives/plugins
		as/plugins
		birt/plugins
		common/plugins (no feature)
		examples/plugins
		portlet/plugins
		seam/plugins
		struts/plugins
		vpe/plugins (richfaces)

* Don't forget to update files with "2.0.0.Beta1" in them to "2.0.0.CR1", eg.:

/devstudio-trunk/
	devstudio-installer/version.properties
	product/plugins/com.jboss.jbds.product/.eclipseproduct
	releng/org.jboss.ide.eclipse.releng/builders/product/versionTags/jbds/2.0.0.*.tags
	releng/org.jboss.ide.eclipse.releng/builders/product/versionTags/jbosstools/3.0.0.*.tags
	releng/org.jboss.ide.eclipse.releng/configs/jbds/release.properties

* When switching Hudson task to new target release (eg., moving from CR2 to GA) make sure
to update paths for tests and emma in hudson config too, or test results will not be published!

== 8.1. Branching & Tagging ==

=== 8.1.1. Branching ===

1. Open the SVN Repository view in Eclipse (if using Subclipse) and explore these repos:
	https://svn.jboss.org/repos/devstudio
	https://svn.jboss.org/repos/jbosstools

3. Select trunk

3. Right-click > Branch/Tag...

4. Enter destination folder, eg., branches/devstudio-2.0.0.CR2

5. Create copies of existing nightly builds in Hudson, changing "CR1" to "CR2" as appropriate or "3.0.0.CR2" to "3.0.x". 
	Update hudson/*.sh scripts as appropriate 

6. In the new branch (if not done already), create or update .tags files so that they point at the branch's sources, not trunk.
	/devstudio-2.0.0.branch/releng/org.jboss.ide.eclipse.releng/builders/product/versionTags/jbds/2.0.0.GA.tags
	/devstudio-2.0.0.branch/releng/org.jboss.ide.eclipse.releng/builders/product/versionTags/jbosstools/3.0.0.GA.tags
	
		richfaces.svn=branches/jbosstools-3.0.x
		...
	
7. Kick builds, then notify the team about the new branch:
	Subject: JBoss Tools 3.0.0.CR2 and JBoss Dev Studio 2.0.0.CR2 have been branched
	To: jboss-devstudio-list@redhat.com, external-exadel-list@redhat.com
	Body:
	JBoss Tools 3.0.0.CR2 and JBoss Dev Studio 2.0.0.CR2 have been branched, and the 
	first builds from these branches are now running in Hudson:

	https://jenkins.mw.lab.eng.bos.redhat.com/hudson/view/DevStudio/job/jbosstools-nightly-3.0.0.CR2/
	https://jenkins.mw.lab.eng.bos.redhat.com/hudson/view/DevStudio/job/devstudio-nightly-2.0.0.CR2/


=== 8.1.2. Tagging ===

Instead of using the make_tags.sh script, it's actually easier to:

==== Subclipse ====

1. Open the SVN Repository view in Eclipse and explore these repos:
     https://svn.jboss.org/repos/devstudio
     https://svn.jboss.org/repos/jbosstools

2. Select a branch to tag (eg., branches/devstudio-2.0.0.CR1 or trunk)

3. Right-click > copy

4. Select destination folder (tags)

5. Right-click > paste

==== Subversive ====

1. Open the SVN Repository view in Eclipse and explore these repos:
     https://svn.jboss.org/repos/devstudio
     https://svn.jboss.org/repos/jbosstools

2. Select a branch to tag (eg., branches/devstudio-3.0.0.Beta2 or trunk)

3. Right-click > Refactor > Copy To...

4. Select destination folder (tags)


==== Commandline SVN ====

svn copy https://svn.jboss.org/repos/jbosstools/branches/jbosstools-3.2.0.Beta2 https://svn.jboss.org/repos/jbosstools/tags/jbosstools-3.2.0.Beta2 -m "tag for 3.2.0.Beta2 release"
svn copy https://svn.jboss.org/repos/devstudio/branches/devstudio-4.0.0.Beta2 https://svn.jboss.org/repos/devstudio/tags/devstudio-4.0.0.Beta2 -m "tag for 4.0.0.Beta2 release"

== 8.2. Creating a tags file ==

This is not required if you're building from a branch, only if you plan to build from a tag. 
If you're branching, you'll need a new .tags file for the new branch.


== 8.3. Modify release.properties ==

This too is not required if you're already building from a branch, only if you need to switch from branch to tag.


== 8.4. QA ==


== 8.5. Sourceforge ==

1. Request access from the JBoss Sourceforge project admin (sstark@redhat.com), so that you can add & modify 
releases in that project. Once permission is granted, go to https://sourceforge.net/project/admin/?group_id=22866

Using "gear" icon menu, create a new release folder called  
	JBoss.org/JBossTools/JBossTools3.1.0.x

	(Later you will rename it to remove the underscores.)

	https://sourceforge.net/project/admin/explorer.php?group_id=22866

2. Send an email to helpdesk@redhat.com requesting general access to one of the netapp servers in the Hudson 
cluster, such as dev01.qa.atl2.redhat.com or dev02.qa.atl2.redhat.com. When you have access, you can explore
builds (look for *.zip, *.tar.gz, and *.MD5) in these folders:

ssh to qa, then sudo to hudson. Then you can ssh to the server on which your build was done. Check the build log for node name and path, eg:

	hudson@hudson1:/qa/hudson_ws/workspace/jbosstools-nightly-3.1.0.M3/jbds-build/3.1.0.M3/200909110340/
	hudson@vmg20:/mnt/hudson_workspace/workspace/jbosstools-nightly-3.1.0.M4/jbds-build/3.1.0.M4/200910281724/

where version might be 3.0.0.CR1 or 2.0.0.CR1 and timestamp is in yyyymmddHHMM format, eg., 200812090050.

3. Use rsync over ssh to push files from qa server to sourceforge.net

a) Check files you want to push (directories flattened):

FOR 3.0.x / 2.1.x:

     cd /qa/hudson_ws/workspace/jbosstools-nightly-3.1.0.M3/jbds-build/3.1.0.M3/200909110340/; \
     find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "Tests|product.feature|doc.zip" | perl -pe "s#./.+/##g" | sort

FOR 3.1.x / 3.0.x:

	 check the hudson build page for the name of the slave on which the build was done, eg.,  vmg18
	 [hudson@qa01 ~]$ ssh vmg18
	 [hudson@vmg18 ~]$ cd ~/WORKSPACE_LOCAL/jbosstools-nightly-3.1.0.CR3/jbds-build/3.1.0.GA/201003050540
	 find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "\-ALL\-|Tests|product.feature|doc.zip" | perl -pe "s#./.+/##g" | sort; \
     find . -name "*.zip*" -o -name "*.tar.gz*" | egrep "\-ALL\-sources" | perl -pe "s#./.+/##g" | sort

FOR 3.2.x:

	 check the hudson build page (aggregate build) for the name of the slave on which the build was done, eg.,  dev43
	 [hudson@qa01 ~]$ ssh dev43
	 [hudson@dev43 ~]$ cd /mnt/hudson_workspace/workspace/jbosstools-3.2.0.Beta2.aggregate/results/jbosstools-3.2.0.Beta2.aggregate
	 find . -name "*Update*.zip" | egrep -v "aggregate-Sources|nightly-Update" | perl -pe "s#./.+/##g" | sort; echo ""; \
	 find . -name "*Source*.zip" | egrep -v "aggregate-Sources|nightly-Update" | perl -pe "s#./.+/##g" | sort

b) count files you plan to push:

     cd ~/hudson_workspace/workspace/jbosstools-nightly-3.1.0.CR2/jbds-build/3.1.0.CR2/201002191015

FOR 3.0.x / 2.1.x:

     find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "Tests|product.feature|doc.zip" | wc -l

		(should be 60 -- 30 zips and MD5 sums each)
     
FOR 3.1.x / 3.0.x:
     
     find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "\-ALL\-|Tests|product.feature|doc.zip" | wc -l; \
     find . -name "*.zip*" -o -name "*.tar.gz*" | egrep "\-ALL\-sources" | perl -pe "s#./.+/##g" | wc -l

		(should be 60 + 2 -- 31 zips and MD5 sums each)

FOR 3.2.x:

	 check the hudson build page (aggregate build) for the name of the slave on which the build was done, eg.,  dev43
	 [hudson@qa01 ~]$ ssh dev43
	 [hudson@dev43 ~]$ cd /mnt/hudson_workspace/workspace/jbosstools-3.2.0.Beta2.aggregate/results/jbosstools-3.2.0.Beta2.aggregate
	 find . -name "*Update*.zip" | egrep -v "aggregate-Sources|nightly-Update" | perl -pe "s#./.+/##g" | wc -l; \
	 find . -name "*Source*.zip" | egrep -v "aggregate-Sources|nightly-Update" | perl -pe "s#./.+/##g" | wc -l

		(should be 34+4 = 38 files)

	*** For Beta1, the md5sum file will be pregenerated by publish.sh ***
	 
	 find . -name "*Update*.zip" -o -name "*Source*.zip" -o -name "*md5sum*.txt" | egrep -v "aggregate-Sources|nightly-Update" | perl -pe "s#./.+/##g" | wc -l
	 
		(should be 39 files)

c) push files:
 
     cd ~/hudson_workspace/workspace/jbosstools-nightly-3.1.0.CR2/jbds-build/3.1.0.CR2/201002191015
     
FOR 3.0.x / 2.1.x:

     rsync -avP -e ssh $(find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "Tests|product.feature|doc.zip") \
       "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.0.x/"

FOR 3.1.x / 3.0.x:
     
     cd /tmp/200910281724; \
     rsync -avP -e ssh $(find . -name "*.zip*" -o -name "*.tar.gz*" | egrep -v "\-ALL\-|Tests|product.feature|doc.zip") \
     $(find . -name "*.zip*" -o -name "*.tar.gz*" | egrep "\-ALL\-sources") \
       "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.1.x/"

FOR 3.2.x:

	check the hudson build page (aggregate build) for the name of the slave on which the build was done, eg.,  dev43
	 [hudson@qa01 ~]$ ssh dev43
	 [hudson@dev43 ~]$ cd /mnt/hudson_workspace/workspace/jbosstools-3.2.0.Beta2.aggregate/results/jbosstools-3.2.0.Beta2.aggregate
	 echo "Update Site Zips" > md5sums.txt; \
	 echo "----------------" >> md5sums.txt; \
	 md5sum $(find . -name "*Update*.zip" | egrep -v "aggregate-Sources|nightly-Update") >> md5sums.txt; \
	 echo "  " >> md5sums.txt; \
	 echo "Source Zips" >> md5sums.txt; \
	 echo "-----------" >> md5sums.txt; \
	 md5sum $(find . -name "*Source*.zip" | egrep -v "aggregate-Sources|nightly-Update") >> md5sums.txt; \
	 cat md5sums.txt

	 rsync -avP -e ssh \
	   $(find . -name "*Update*.zip" | egrep -v "aggregate-Sources|nightly-Update") \
	   $(find . -name "*Source*.zip" | egrep -v "aggregate-Sources|nightly-Update") \
	   $(find . -name "*md5sum*") \
	   "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.2.0.x/"

	*** For Beta1, the md5sum file will be pregenerated by publish.sh ***
	 
	 rsync -avP -e ssh $(find . -name "*Update*.zip" -o -name "*Source*.zip" -o -name "*md5sum*.txt" | egrep -v "aggregate-Sources|nightly-Update")
	   "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.2.0.x/"
	   
	*** For Beta2, collect three zips, then rename zips, generate md5sums, and publish:
	
	ssh hudson@qa01
	mkdir /home/hudson/jbosstools-3.2.0.Beta2; cd /home/hudson/jbosstools-3.2.0.Beta2 
	rsync -aPrz tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/3.2.0.Beta2/2010-12-06_21-53-23-H68/components/hibernatetools-Update-2010-12-06_20-46-18-H28.zip .
	rsync -aPrz tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/3.2.0.Beta2/2010-12-06_21-53-23-H68/components/jbosstools-3.2_stable_branch.nightly-Sources-2010-12-06_20-46-18-H28.zip .
	rsync -aPrz tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/3.2.0.Beta2/2010-12-06_21-53-23-H68/all/jbosstools-3.2_stable_branch.aggregate-Update-2010-12-06_21-53-23-H68.zip .
	mv jbosstools-3.2_stable_branch.aggregate-Update-2010-12-06_21-53-23-H68.zip jbosstools-3.2.Beta2-Update-2010-12-06_21-53-23-H68.zip
  	mv jbosstools-3.2_stable_branch.nightly-Sources-2010-12-06_20-46-18-H28.zip jbosstools-3.2.Beta2-Sources-2010-12-06_20-46-18-H28.zip
	md5sum *.zip > jbosstools-3.2.Beta2.md5sums.txt
	rsync -avP -e ssh * "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.2.0.x/"
	
	(Note that sources zip does not include teiid, pi4soa, drools, etc.)
	 
See also https://sourceforge.net/apps/trac/sourceforge/wiki/Release%20files%20for%20download#Rsync

4. While files are uploading, create Release Notes and Changelog:

a) Release Notes & Change Log:

	Edit the file /devstudio-trunk/releng/Releng_And_Release_Guide.pdf.Chapter.8.Release.addenda.Release_Notes.html 
	  or the file /devstudio-2.1.x/releng/Releng_And_Release_Guide.pdf.Chapter.8.Release.addenda.Release_Notes.html
	
	To collect updated change log:

	https://jira.jboss.org/jira/browse/JBIDE
	-> click "Reports > Release Notes Report" on right side
	--> select release ("3.2.0.Beta2"), type of issues ("All"), and style ("HTML").
	--> select text and paste into file.
	
	Save file as zz_Release_Notes_3.2.0.Beta2.html.
	rsync -avP -e ssh zz_Release_Notes_3.2.0.Beta2.html "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.2.0.x/"
	rsync -avP -e ssh zz_Release_Notes_3.2.0.Beta2.html "nickboldt,jboss@frs.sourceforge.net:/home/frs/project/j/jb/jboss/JBossTools/JBossTools3.2.0.x/README.latest.html"
	
5. Using a different browser, verify at least one download works (eg., JBossTools-Update-*.zip). 

	http://sourceforge.net/projects/jboss/files/ ->
	https://sourceforge.net/projects/jboss/files/JBossTools/JBossTools3.2.0.x/zz_Release_Notes_3.2.0.Beta2.html/download
	https://sourceforge.net/projects/jboss/files/JBossTools/JBossTools3.2.0.x/jbosstools-3.2.0.Beta2.aggregate-Update-2010-09-08_17-17-54-H243.zip/download

== 8.6. jboss.org/tools ==

1. Maintainance is done via Magnolia now. 

	https://www.jboss.org/author/ or https://www.jboss.org/author/tools/downloads/dev 
	
2. Expand tools/downloads/ and edit pages by selecting "Open Page". To publish, select "Activate this page".

You can get the HTML for the downloads pages here, and merge pieces together:

sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/development/3.2.0.Beta2/2010-09-08_17-17-54-H243/logs/download-snippet.txt
sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/nightly/3.2.helios/jbosstools-3.2.0.Beta2.nightly/logs/download-snippet.txt
sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/nightly/3.2.helios/jbosstools-pi4soa/logs/download-snippet.txt
sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/nightly/3.2.helios/jbosstools-drools/logs/download-snippet.txt
sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/nightly/3.2.helios/jbosstools-teiid-designer/logs/download-snippet.txt
sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/builds/nightly/3.2.helios/xulrunner-1.9.1.2/logs/download-snippet.txt

	*** For Beta1, this should be simpler: https://jira.jboss.org/browse/JBIDE-7045 ***
	 

== 8.7. The Update Site ==

	using Konqueror, rename the existing update site:
	
	sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/updates/development
	to
	sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/updates/development_previous

	check the hudson build page (aggregate build) for the name of the slave on which the build was done, eg.,  dev43
	 [hudson@qa01 ~]$ ssh dev43
	 [hudson@dev43 ~]$ cd /mnt/hudson_workspace/workspace/jbosstools-3.2.0.Beta2.aggregate/results/jbosstools-3.2.0.Beta2.aggregate/all/repo/

   	rsync -Parz --delete * tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/development/
	rsync -Parz --delete * tools@filemgmt.jboss.org:/downloads_htdocs/tools/updates/jbosstools-3.2.0.Beta2/

2. Test update site:

a) download Eclipse 3.4.2 Platform Binary from: http://download.eclipse.org/eclipse/downloads/
b) Start Eclipse. 
c) Help > Software Updates... > Available Software (tab) > Manage Sites... (button)
d) Add these URLs, or, if they're already listed, make sure they're enabled (checked)
     http://download.jboss.org/jbosstools/updates/development/ or 
     http://download.jboss.org/jbosstools/updates/stable/
     http://download.eclipse.org/releases/ganymede/
e) Click OK.
f) Expand the JBoss Tools Update Site and select the entire feature set.
g) Click Install... then Next and/or Finish. Restart when prompted.

See also http://www.jboss.org/tools/download/installation
 
This can be partially automated & documented using 
	./Releng_And_Release_Guide.pdf.Chapter.8.Release.addenda.launch.eclipse.sh

3. Update index file:

   sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/updates/index.html

== 8.8. Announcements ==

Wait until at least 24hrs have passed after publishing zips to sourceforge and the update site 
before doing any announcements or documentation changes.

Max will handle this. A post needs to go to:

* the mailing lists (jbosstools-announce@redhat.com, soa-p-announce@redhat.com, external-exadel-list@redhat.com)
* the forum (http://www.jboss.org/index.html?module=bb&op=main&c=20), and
* the twitterz (http://twitter.com/jbosstools)

== 8.9. Developer Studio Erata == 

This step was skipped in 2.0.0.CR1. See JIRA https://jira.jboss.org/jira/browse/JBDS-534


== 8.10. Clean up download.jboss.org -- delete old builds, etc. ==

===Milestone===

a) Using Konqueror locally, create 3.1.0.Beta2 folder in tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/.
b) As hudson@qa01:
 cd /tmp; rsync -aP tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/nightly/3.1.0.Beta2/200907092133 .
 rsync -aP 200907092133 tools@filemgmt.jboss.org:/downloads_htdocs/tools/builds/development/3.1.0.Beta2/
c) see also Release section below - same copy/rename steps apply re: update site.

===Release===

a) sftp://tools@filemgmt.jboss.org/downloads_htdocs/tools/
b) back up existing /stable/ build & update into its correct name (eg., 2.1.2.GA)
c) copy release build into /stable/ and /development/ (faster to do on qa01 than on own machine; also saves your bandwidth)
d) delete old stuff

== 8.11. Releasing an R build (.GA) ==

A quick checklist for steps to do for a GA release:

+ spin builds
 + deal with network problems
 + deal with return.properties problems (?) - TPTP and BIRT fail to build
 + smoke test 'em

+ back up stable update site into its own folder
+ update /builds/index.html and /updates/index.html if applicable (via sftp)
+ clean out old builds

+ publish to sourceforge

+ update jboss.org using magnolia
   
+ test update site (8.7 #2)

+ blog/announce

-[EOF]-
